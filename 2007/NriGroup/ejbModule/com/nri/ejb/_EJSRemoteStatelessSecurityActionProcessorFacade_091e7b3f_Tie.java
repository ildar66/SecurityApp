// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.nri.ejb;

import com.nri.domain.Company;
import com.nri.domain.Division;
import com.nri.domain.DivisionType;
import com.nri.domain.MsUser;
import com.nri.domain.Operator;
import com.nri.domain.Page;
import com.nri.domain.People;
import com.nri.domain.Profile;
import com.nri.domain.Role;
import com.nri.domain.WorkPosition;
import com.nri.domain.Worker;
import com.nri.exception.MappingException;
import com.nri.exception.ModelException;
import com.nri.exception.NoSuchCompanyException;
import com.nri.exception.NoSuchDivisionException;
import com.nri.exception.NoSuchMsUserException;
import com.nri.exception.NoSuchOperatorException;
import com.nri.exception.NoSuchPeopleException;
import com.nri.exception.NoSuchProfileException;
import com.nri.exception.NoSuchRoleException;
import com.nri.exception.NoSuchWorkPositionException;
import com.nri.exception.NoSuchWorkerException;
import java.io.Serializable;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteStatelessSecurityActionProcessorFacade_091e7b3f_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements javax.rmi.CORBA.Tie {
    
    private EJSRemoteStatelessSecurityActionProcessorFacade_091e7b3f target = null;
    private org.omg.CORBA.ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.nri.ejb.SecurityActionProcessorFacade:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(java.rmi.Remote target) {
        this.target = (EJSRemoteStatelessSecurityActionProcessorFacade_091e7b3f) target;
    }
    
    public java.rmi.Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public org.omg.CORBA.ORB orb() {
        return _orb();
    }
    
    public void orb(org.omg.CORBA.ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(org.omg.CORBA.portable.Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public org.omg.CORBA.portable.OutputStream _invoke(String method, org.omg.CORBA.portable.InputStream _in, org.omg.CORBA.portable.ResponseHandler reply) throws org.omg.CORBA.SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2130929655: 
                    if (method.equals("findMsUsers")) {
                        return findMsUsers(in, reply);
                    }
                case -2095005368: 
                    if (method.equals("removeOperator")) {
                        return removeOperator(in, reply);
                    }
                case -2007539226: 
                    if (method.equals("findNfsUsers")) {
                        return findNfsUsers(in, reply);
                    }
                case -1955236303: 
                    if (method.equals("findWorkerByKey")) {
                        return findWorkerByKey(in, reply);
                    }
                case -1875310949: 
                    if (method.equals("addWorkPosition")) {
                        return addWorkPosition(in, reply);
                    }
                case -1844989035: 
                    if (method.equals("findOperatorToSuperRegionList")) {
                        return findOperatorToSuperRegionList(in, reply);
                    }
                case -1805376352: 
                    if (method.equals("updateProfile")) {
                        return updateProfile(in, reply);
                    }
                case -1794418240: 
                    if (method.equals("findPeopleByKey")) {
                        return findPeopleByKey(in, reply);
                    }
                case -1716114307: 
                    if (method.equals("findDivisionHierarchyForEncloser")) {
                        return findDivisionHierarchyForEncloser(in, reply);
                    }
                case -1615262171: 
                    if (method.equals("findWorkers__CORBA_WStringValue__com_nri_domain_Worker__CORBA_WStringValue")) {
                        return findWorkers__CORBA_WStringValue__com_nri_domain_Worker__CORBA_WStringValue(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1474833307: 
                    if (method.equals("addOperator")) {
                        return addOperator(in, reply);
                    }
                case -1436248932: 
                    if (method.equals("addCompany")) {
                        return addCompany(in, reply);
                    }
                case -1378197087: 
                    if (method.equals("addLinkPeopleToNfsUser")) {
                        return addLinkPeopleToNfsUser(in, reply);
                    }
                case -1332136487: 
                    if (method.equals("findOperatorToSuperRegionAccessList")) {
                        return findOperatorToSuperRegionAccessList(in, reply);
                    }
                case -1318401538: 
                    if (method.equals("removeWorkPosition")) {
                        return removeWorkPosition(in, reply);
                    }
                case -1229731503: 
                    if (method.equals("removeDivision")) {
                        return removeDivision(in, reply);
                    }
                case -1170052062: 
                    if (method.equals("findCompanies")) {
                        return findCompanies(in, reply);
                    }
                case -1155696478: 
                    if (method.equals("findDivisionByKey")) {
                        return findDivisionByKey(in, reply);
                    }
                case -1148635977: 
                    if (method.equals("addRole")) {
                        return addRole(in, reply);
                    }
                case -1113795398: 
                    if (method.equals("updateMsUser")) {
                        return updateMsUser(in, reply);
                    }
                case -1064947964: 
                    if (method.equals("clearInMemoryCaches")) {
                        return clearInMemoryCaches(in, reply);
                    }
                case -1040065352: 
                    if (method.equals("updatePeople")) {
                        return updatePeople(in, reply);
                    }
                case -1026974667: 
                    if (method.equals("removeMsUser")) {
                        return removeMsUser(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -970480902: 
                    if (method.equals("deleteLinkOperatorToRole")) {
                        return deleteLinkOperatorToRole(in, reply);
                    }
                case -953244621: 
                    if (method.equals("removePeople")) {
                        return removePeople(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -830341721: 
                    if (method.equals("updateWorker")) {
                        return updateWorker(in, reply);
                    }
                case -744625296: 
                    if (method.equals("findPeoplesByName__CORBA_WStringValue")) {
                        return findPeoplesByName__CORBA_WStringValue(in, reply);
                    }
                case -743520990: 
                    if (method.equals("removeWorker")) {
                        return removeWorker(in, reply);
                    }
                case -714865552: 
                    if (method.equals("addLinkOperatorToRole")) {
                        return addLinkOperatorToRole(in, reply);
                    }
                case -712338345: 
                    if (method.equals("deleteLinkPeopleToNfsUser")) {
                        return deleteLinkPeopleToNfsUser(in, reply);
                    }
                case -687467472: 
                    if (method.equals("findOperatorToRoleAccessList")) {
                        return findOperatorToRoleAccessList(in, reply);
                    }
                case -628045117: 
                    if (method.equals("updateWorkPosition")) {
                        return updateWorkPosition(in, reply);
                    }
                case -609559442: 
                    if (method.equals("addDivision")) {
                        return addDivision(in, reply);
                    }
                case -545466508: 
                    if (method.equals("updateCompany")) {
                        return updateCompany(in, reply);
                    }
                case -520269524: 
                    if (method.equals("findRolesByName__CORBA_WStringValue__CORBA_WStringValue")) {
                        return findRolesByName__CORBA_WStringValue__CORBA_WStringValue(in, reply);
                    }
                case -457838349: 
                    if (method.equals("findDivisions__CORBA_WStringValue__java_lang_Integer__java_lang_Boolean__com_nri_domain_DivisionType__CORBA_WStringValue")) {
                        return findDivisions__CORBA_WStringValue__java_lang_Integer__java_lang_Boolean__com_nri_domain_DivisionType__CORBA_WStringValue(in, reply);
                    }
                case -374490966: 
                    if (method.equals("findOperatorToRegionList")) {
                        return findOperatorToRegionList(in, reply);
                    }
                case -362395245: 
                    if (method.equals("findAllCompanies")) {
                        return findAllCompanies(in, reply);
                    }
                case -353954436: 
                    if (method.equals("findAllPeoples")) {
                        return findAllPeoples(in, reply);
                    }
                case -295984929: 
                    if (method.equals("updateRole")) {
                        return updateRole(in, reply);
                    }
                case -189799669: 
                    if (method.equals("findOperatorByKey")) {
                        return findOperatorByKey(in, reply);
                    }
                case -172698990: 
                    if (method.equals("addMsUser")) {
                        return addMsUser(in, reply);
                    }
                case -98968944: 
                    if (method.equals("addPeople")) {
                        return addPeople(in, reply);
                    }
                case -73275192: 
                    if (method.equals("findWorkers__com_nri_domain_Worker__CORBA_WStringValue")) {
                        return findWorkers__com_nri_domain_Worker__CORBA_WStringValue(in, reply);
                    }
                case -41082975: 
                    if (method.equals("findPeopleToNfsUserList")) {
                        return findPeopleToNfsUserList(in, reply);
                    }
                case -17493250: 
                    if (method.equals("findMsUserByKey")) {
                        return findMsUserByKey(in, reply);
                    }
                case 110754687: 
                    if (method.equals("addWorker")) {
                        return addWorker(in, reply);
                    }
                case 164255534: 
                    if (method.equals("findOperatorToRegionAccessList")) {
                        return findOperatorToRegionAccessList(in, reply);
                    }
                case 267490568: 
                    if (method.equals("findDivisionsHierarchy")) {
                        return findDivisionsHierarchy(in, reply);
                    }
                case 369618061: 
                    if (method.equals("updateOperator")) {
                        return updateOperator(in, reply);
                    }
                case 372360632: 
                    if (method.equals("saveRegionAccessForOperator")) {
                        return saveRegionAccessForOperator(in, reply);
                    }
                case 552147449: 
                    if (method.equals("findRoleByKey")) {
                        return findRoleByKey(in, reply);
                    }
                case 599182057: 
                    if (method.equals("findRolesByName__CORBA_WStringValue")) {
                        return findRolesByName__CORBA_WStringValue(in, reply);
                    }
                case 699881248: 
                    if (method.equals("findWorkPositions")) {
                        return findWorkPositions(in, reply);
                    }
                case 886066309: 
                    if (method.equals("removeProfile")) {
                        return removeProfile(in, reply);
                    }
                case 1065119381: 
                    if (method.equals("findWorkPositionByKey")) {
                        return findWorkPositionByKey(in, reply);
                    }
                case 1098517274: 
                    if (method.equals("removeRole")) {
                        return removeRole(in, reply);
                    }
                case 1153419960: 
                    if (method.equals("findProfileByKey")) {
                        return findProfileByKey(in, reply);
                    }
                case 1234891926: 
                    if (method.equals("updateDivision")) {
                        return updateDivision(in, reply);
                    }
                case 1236524844: 
                    if (method.equals("findOperatorToRoleList")) {
                        return findOperatorToRoleList(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1359592548: 
                    if (method.equals("findCompanyByKey")) {
                        return findCompanyByKey(in, reply);
                    }
                case 1461443165: 
                    if (method.equals("findDivisions__CORBA_WStringValue__java_lang_Integer__java_lang_Boolean__CORBA_WStringValue")) {
                        return findDivisions__CORBA_WStringValue__java_lang_Integer__java_lang_Boolean__CORBA_WStringValue(in, reply);
                    }
                case 1598808520: 
                    if (method.equals("addProfile")) {
                        return addProfile(in, reply);
                    }
                case 1609723103: 
                    if (method.equals("findPeoplesByName__CORBA_WStringValue__java_lang_Boolean__long__long__CORBA_WStringValue")) {
                        return findPeoplesByName__CORBA_WStringValue__java_lang_Boolean__long__long__CORBA_WStringValue(in, reply);
                    }
                case 1905489558: 
                    if (method.equals("findOperators")) {
                        return findOperators(in, reply);
                    }
                case 1932497525: 
                    if (method.equals("findAllRoles")) {
                        return findAllRoles(in, reply);
                    }
                case 1932599831: 
                    if (method.equals("saveSuperRegionAccessForOperator")) {
                        return saveSuperRegionAccessForOperator(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
                case 1987574944: 
                    if (method.equals("findAllTerrabyteServers")) {
                        return findAllTerrabyteServers(in, reply);
                    }
                case 1987582663: 
                    if (method.equals("setMainLinkPeopleToNfsUser")) {
                        return setMainLinkPeopleToNfsUser(in, reply);
                    }
                case 2145976153: 
                    if (method.equals("removeCompany")) {
                        return removeCompany(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private org.omg.CORBA.portable.OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removePeople(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        try {
            target.removePeople(arg0);
        } catch (NoSuchPeopleException ex) {
            String id = "IDL:com/nri/_exception/NoSuchPeopleEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchPeopleException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addPeople(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        People arg0 = (People) in.read_value(People.class);
        try {
            target.addPeople(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updatePeople(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        People arg0 = (People) in.read_value(People.class);
        try {
            target.updatePeople(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findAllPeoples(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.findAllPeoples();
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findPeopleByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        People result;
        try {
            result = target.findPeopleByKey(arg0);
        } catch (NoSuchPeopleException ex) {
            String id = "IDL:com/nri/_exception/NoSuchPeopleEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchPeopleException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,People.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findPeoplesByName__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findPeoplesByName(arg0);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findRoleByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Role result;
        try {
            result = target.findRoleByKey(arg0);
        } catch (NoSuchRoleException ex) {
            String id = "IDL:com/nri/_exception/NoSuchRoleEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchRoleException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Role.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeRole(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        try {
            target.removeRole(arg0);
        } catch (NoSuchRoleException ex) {
            String id = "IDL:com/nri/_exception/NoSuchRoleEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchRoleException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findRolesByName__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findRolesByName(arg0);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addRole(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Role arg0 = (Role) in.read_value(Role.class);
        try {
            target.addRole(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findAllRoles(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.findAllRoles();
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateRole(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Role arg0 = (Role) in.read_value(Role.class);
        try {
            target.updateRole(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findRolesByName__CORBA_WStringValue__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findRolesByName(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findWorkPositionByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        WorkPosition result;
        try {
            result = target.findWorkPositionByKey(arg0);
        } catch (NoSuchWorkPositionException ex) {
            String id = "IDL:com/nri/_exception/NoSuchWorkPositionEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchWorkPositionException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,WorkPosition.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeWorkPosition(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        try {
            target.removeWorkPosition(arg0);
        } catch (NoSuchWorkPositionException ex) {
            String id = "IDL:com/nri/_exception/NoSuchWorkPositionEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchWorkPositionException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addWorkPosition(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        WorkPosition arg0 = (WorkPosition) in.read_value(WorkPosition.class);
        try {
            target.addWorkPosition(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateWorkPosition(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        WorkPosition arg0 = (WorkPosition) in.read_value(WorkPosition.class);
        try {
            target.updateWorkPosition(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findWorkPositions(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Boolean arg1 = (Boolean) in.read_value(Boolean.class);
        String arg2 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findWorkPositions(arg0, arg1, arg2);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream clearInMemoryCaches(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        target.clearInMemoryCaches();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findMsUserByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        MsUser result;
        try {
            result = target.findMsUserByKey(arg0);
        } catch (NoSuchMsUserException ex) {
            String id = "IDL:com/nri/_exception/NoSuchMsUserEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchMsUserException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,MsUser.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeMsUser(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        try {
            target.removeMsUser(arg0);
        } catch (NoSuchMsUserException ex) {
            String id = "IDL:com/nri/_exception/NoSuchMsUserEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchMsUserException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addMsUser(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        MsUser arg0 = (MsUser) in.read_value(MsUser.class);
        try {
            target.addMsUser(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateMsUser(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        MsUser arg0 = (MsUser) in.read_value(MsUser.class);
        try {
            target.updateMsUser(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findMsUsers(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findMsUsers(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findCompanyByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Company result;
        try {
            result = target.findCompanyByKey(arg0);
        } catch (NoSuchCompanyException ex) {
            String id = "IDL:com/nri/_exception/NoSuchCompanyEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchCompanyException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Company.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeCompany(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        try {
            target.removeCompany(arg0);
        } catch (NoSuchCompanyException ex) {
            String id = "IDL:com/nri/_exception/NoSuchCompanyEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchCompanyException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateCompany(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Company arg0 = (Company) in.read_value(Company.class);
        try {
            target.updateCompany(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addCompany(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Company arg0 = (Company) in.read_value(Company.class);
        try {
            target.addCompany(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findCompanies(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findCompanies(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findAllCompanies(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.findAllCompanies();
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findDivisionByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Division result;
        try {
            result = target.findDivisionByKey(arg0);
        } catch (NoSuchDivisionException ex) {
            String id = "IDL:com/nri/_exception/NoSuchDivisionEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchDivisionException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Division.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateDivision(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Division arg0 = (Division) in.read_value(Division.class);
        try {
            target.updateDivision(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeDivision(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        try {
            target.removeDivision(arg0);
        } catch (NoSuchDivisionException ex) {
            String id = "IDL:com/nri/_exception/NoSuchDivisionEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchDivisionException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addDivision(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Division arg0 = (Division) in.read_value(Division.class);
        try {
            target.addDivision(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findDivisions__CORBA_WStringValue__java_lang_Integer__java_lang_Boolean__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        Boolean arg2 = (Boolean) in.read_value(Boolean.class);
        String arg3 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findDivisions(arg0, arg1, arg2, arg3);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findDivisionsHierarchy(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Boolean arg1 = (Boolean) in.read_value(Boolean.class);
        String arg2 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findDivisionsHierarchy(arg0, arg1, arg2);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findDivisions__CORBA_WStringValue__java_lang_Integer__java_lang_Boolean__com_nri_domain_DivisionType__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        Boolean arg2 = (Boolean) in.read_value(Boolean.class);
        DivisionType arg3 = (DivisionType) in.read_value(DivisionType.class);
        String arg4 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findDivisions(arg0, arg1, arg2, arg3, arg4);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findWorkers__com_nri_domain_Worker__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Worker arg0 = (Worker) in.read_value(Worker.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findWorkers(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findDivisionHierarchyForEncloser(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        int arg1 = in.read_long();
        List result;
        try {
            result = target.findDivisionHierarchyForEncloser(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,List.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findWorkers__CORBA_WStringValue__com_nri_domain_Worker__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Worker arg1 = (Worker) in.read_value(Worker.class);
        String arg2 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findWorkers(arg0, arg1, arg2);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findWorkerByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Worker result;
        try {
            result = target.findWorkerByKey(arg0);
        } catch (NoSuchWorkerException ex) {
            String id = "IDL:com/nri/_exception/NoSuchWorkerEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchWorkerException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Worker.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeWorker(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        try {
            target.removeWorker(arg0);
        } catch (NoSuchWorkerException ex) {
            String id = "IDL:com/nri/_exception/NoSuchWorkerEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchWorkerException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addWorker(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Worker arg0 = (Worker) in.read_value(Worker.class);
        try {
            target.addWorker(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateWorker(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Worker arg0 = (Worker) in.read_value(Worker.class);
        try {
            target.updateWorker(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findPeoplesByName__CORBA_WStringValue__java_lang_Boolean__long__long__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Boolean arg1 = (Boolean) in.read_value(Boolean.class);
        int arg2 = in.read_long();
        int arg3 = in.read_long();
        String arg4 = (String) in.read_value(String.class);
        Page result;
        try {
            result = target.findPeoplesByName(arg0, arg1, arg2, arg3, arg4);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Page.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findOperators(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findOperators(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findOperatorByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Operator result;
        try {
            result = target.findOperatorByKey(arg0);
        } catch (NoSuchOperatorException ex) {
            String id = "IDL:com/nri/_exception/NoSuchOperatorEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchOperatorException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Operator.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeOperator(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        try {
            target.removeOperator(arg0);
        } catch (NoSuchOperatorException ex) {
            String id = "IDL:com/nri/_exception/NoSuchOperatorEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchOperatorException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addOperator(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Operator arg0 = (Operator) in.read_value(Operator.class);
        try {
            target.addOperator(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateOperator(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Operator arg0 = (Operator) in.read_value(Operator.class);
        try {
            target.updateOperator(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findPeopleToNfsUserList(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findPeopleToNfsUserList(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findNfsUsers(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Boolean arg1 = (Boolean) in.read_value(Boolean.class);
        String arg2 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findNfsUsers(arg0, arg1, arg2);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addLinkPeopleToNfsUser(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        try {
            target.addLinkPeopleToNfsUser(arg0, arg1);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream deleteLinkPeopleToNfsUser(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        try {
            target.deleteLinkPeopleToNfsUser(arg0, arg1);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream setMainLinkPeopleToNfsUser(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        try {
            target.setMainLinkPeopleToNfsUser(arg0, arg1);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findOperatorToRoleAccessList(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findOperatorToRoleAccessList(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findOperatorToRoleList(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findOperatorToRoleList(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addLinkOperatorToRole(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        try {
            target.addLinkOperatorToRole(arg0, arg1);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream deleteLinkOperatorToRole(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        try {
            target.deleteLinkOperatorToRole(arg0, arg1);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findOperatorToRegionAccessList(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findOperatorToRegionAccessList(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findOperatorToRegionList(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findOperatorToRegionList(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream saveRegionAccessForOperator(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Collection arg1 = (Collection) in.read_value(Collection.class);
        try {
            target.saveRegionAccessForOperator(arg0, arg1);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findOperatorToSuperRegionAccessList(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findOperatorToSuperRegionAccessList(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findOperatorToSuperRegionList(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.findOperatorToSuperRegionList(arg0, arg1);
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream saveSuperRegionAccessForOperator(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Collection arg1 = (Collection) in.read_value(Collection.class);
        try {
            target.saveSuperRegionAccessForOperator(arg0, arg1);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findAllTerrabyteServers(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.findAllTerrabyteServers();
        } catch (ModelException ex) {
            String id = "IDL:com/nri/_exception/ModelEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,ModelException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findProfileByKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Profile arg0 = (Profile) in.read_value(Profile.class);
        Profile result;
        try {
            result = target.findProfileByKey(arg0);
        } catch (NoSuchProfileException ex) {
            String id = "IDL:com/nri/_exception/NoSuchProfileEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchProfileException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Profile.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeProfile(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Profile arg0 = (Profile) in.read_value(Profile.class);
        try {
            target.removeProfile(arg0);
        } catch (NoSuchProfileException ex) {
            String id = "IDL:com/nri/_exception/NoSuchProfileEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,NoSuchProfileException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream addProfile(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Profile arg0 = (Profile) in.read_value(Profile.class);
        try {
            target.addProfile(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateProfile(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Profile arg0 = (Profile) in.read_value(Profile.class);
        try {
            target.updateProfile(arg0);
        } catch (MappingException ex) {
            String id = "IDL:com/nri/_exception/MappingEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,MappingException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
}
